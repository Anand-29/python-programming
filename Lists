Q-1 : List

Sita has been promoted as a Team Leader and she has been shifted to Multimedia Team. As she needs to extensively work on audio, image and video signals, she is planning to spend a day in mastering the basics of 1-D and 2-D arrays. Can you please help her out? Write a program to find the maximum element in an array. Input Format: Input consists of n+1 integers. The first line of the input contains an integer corresponds to ‘n’ , the size of the array. The next ‘n’ integers correspond to the elements in the array. Assume that the maximum value of n is 15. Output Format: Refer sample input and output for formatting details.

Input (stdin)

5

2

3

6

8

1

Output (stdout)

8

Input (stdin)

4
6
3
2
1
Output (stdout)

6

Input (stdin)

3
4
5
7
Output (stdout)

7

Program:

list =[]

n = int(input())

for i in range(1,n+1):

  list.append(int(input()))

max = list[0]

for i in list:

  if i>max:

    max=i

print(max)

Q-2: Maximum Element in an Array Sum of array elements

Write a Python program to find the sum of the elements in an array. Input Format: Input consists of n+1 integers. The first integer corresponds to ‘n’ , the size of the array. The next ‘n’ integers correspond to the elements in the array. Assume that the maximum value of n is 15. Output Format: Refer sample input and output for formatting details.

Input (stdin)

5
2
3
6
8
1

Output (stdout)

20

Input (stdin)

4
3
2
1
5

Output (stdout)

11

Program:

list=[]

n=int(input())

for i in range(1,n+1):

  list.append(int(input()))

sum=0

for i in list:

  sum+=i

print(sum)

Q-3: Compatible Arrays

2 arrays are said to be compatible if they are of the same size and if the ith element in the first array is greater than or equal to the ith element in the second array for all i. Write a program to find whether 2 arrays are compatible or not. Input Format: Input consists of 2n+1 integers. The first integer corresponds to ‘n’ , the size of the array. The next ‘n’ integers correspond to the elements in the first array. The last 'n' integers correspond to the elements in the second array. Assume that the maximum value of n is 15. Output Format: Refer sample input and output for formatting details.

Input (stdin)

5
2
3
6
8
1
1
1
1
1
1

Output (stdout)

Compatible

Program:

list=[]

lst=[]

n=int(input())

for i in range(1,n+1):

  list.append(int(input()))

for i in range(1,n+1):

  lst.append(int(input()))

  flag=0

for i in list:

  for j in lst:

    if i>=j:

      flag=1

      break

if flag == 1:

  print("Compatible")

Q-3: Compatible Arrays

2 arrays are said to be compatible if they are of the same size and if the ith element in the first array is greater than or equal to the ith element in the second array for all i. Write a program to find whether 2 arrays are compatible or not. Input Format: Input consists of 2n+1 integers. The first integer corresponds to ‘n’ , the size of the array. The next ‘n’ integers correspond to the elements in the first array. The last 'n' integers correspond to the elements in the second array. Assume that the maximum value of n is 15. Output Format: Refer sample input and output for formatting details.

Input (stdin)

5
2
3
6
8
1
1
1
1
1
1

Output (stdout)

Compatible

Program:

list=[]

lst=[]

n=int(input())

for i in range(1,n+1):

  list.append(int(input()))

for i in range(1,n+1):

  lst.append(int(input()))

  flag=0

for i in list:

  for j in lst:

    if i>=j:

      flag=1

      break

if flag == 1:

  print("Compatible")

Q-4: No. of Distinct Elements in a sorted array

Write a program to find the number of distinct elements in a sorted array. Input Format: Input consists of n+1 integers. The first integer corresponds to n, the number of elements in the array. The next n integers correspond to the elements in the array. Assume that the maximum value of n is 15. Output Format: Output consists of a single integer which corresponds to the number of distinct elements in the array.

Input (stdin)

5
3
3
3
78
90

Output (stdout)

3

Program:

list1=[]

list2=[]

ctr = 0

n=int(input())

for i in range(1,n+1):

  list1.append(int(input()))

  for i in list1:

    if i not in list2:

      list2.append(i)

print(len(list2))

Q-5: Array Mean

Write a program to find the mean of the elements in the array. Input Format: Input consists of n+1 integers where n corresponds to the number of elements in the array. The first integer corresponds to n and the next n integers correspond to the elements in the array. Assume that the maximum number of elements in the array is 20. Output Format: Output consists of a double value which corresponds to the mean of the array. It is printed upto 2 digits of precision. Refer sample input and output for formatting specifications. [All text in bold corresponds to input and the rest corresponds to output.]

Input (stdin)

5
2
4
1
3
1

Output (stdout)

2.20

Input (stdin)

4
1
5
9
8
Output (stdout)

5.75

Program:

list=[]

sum=0

n=int(input())

for i in range(1,n+1):

  list.append(int(input()))

for i in list:

  sum+=i

print(sum/len(list))

Q-6: Create a list

Write a program to create a list and display it. Input format: Input consist of n+1 integers First integer corresponds to the size of the list Next n inputs corresponds to the elements in the list Output format: Output is an integer list.

Input (stdin)

4
1
2
3
4

Output (stdout)

[1, 2, 3, 4]

Input (stdin)

3
4
5
8

Output (stdout)

[4, 5, 8]

Program:

list=[]

n=int(input())

for i in range(1,n+1):

  list.append(int(input()))

print(list)

Q-7: find the largest number in the list

QUESTION: Write a program to find the largest number in the list Input format: Input consist of n+1 integers First integer corresponds to the size of the list Next n inputs corresponds to teh elements in the list Output format: Output is an integer list
Input (stdin)

5
3
2
6
1
7

Output (stdout)

7

Input (stdin)

5
1
4
7
8
9
Output (stdout)

9

Program:

list=[]

n=int(input())

for i in range(1,n+1):

  list.append(int(input()))

  max=list[0]

for i in list:

  if i>max:

    max=i

print(max)

Q-8: Find the smallest number in the list

Write a program to find the smallest number in the list Input format: Input consist of n+1 integers First integer corresponds to the size of the list Next n inputs corresponds to the elements in the list Output format: Output is an integer list

Input (stdin)

5
3
2
6
1
7

Output (stdout)

1

Input (stdin)

3
1
2
3

Output (stdout)

1

Program:

list=[]

n=int(input())

for i in range(1,n+1):

  list.append(int(input()))

  min=list[0]

for i in list:

  if i<min:

    min=i

print(min)

Q-9: Put even or odd number in a list

Python Program to Put Even and Odd elements in a List into Two Different Lists Problem Description The program takes a list and puts the even and odd elements in it into two separate lists. Problem Solution 1. Take in the number of elements and store it in a variable. 2. Take in the elements of the list one by one. 3. Use a for loop to traverse through the elements of the list and an if statement to check if the element is even or odd. 4. If the element is even, append it to a separate list and if it is odd, append it to a different one. 5. Display the elements in both the lists. 6. Exit. Input Format: Input consists of n + 1 integers. First integer corresponds to the size , The next n inputs corresponds to the elements in the list. Output Format First line corresponds to the even list Second line corresponds to the odd list

Input (stdin)

5
67
43
44
22
455

Output (stdout)

[44, 22]
[67, 43, 455]

Program:

list=[]

l1=[]

l2=[]

n = int(input())

for i in range(1,n+1):

  list.append(int(input()))

for i in list:

  if i%2==0:

    l1.append(i)

  else:

    l2.append(i)

print(l1)

print(l2)

Q-10: Find the second largest number in a list

Python Program to Find the Second Largest Number in a List Problem Description The program takes a list and prints the second largest number in the list. Problem Solution 1. Take in the number of elements and store it in a variable. 2. Take in the elements of the list one by one. 3. Sort the list in ascending order. 4. Print the second last element of the list. 5. Exit. Input Format: Input consists of n + 1 integers. First integer corresponds to the size , The next n inputs corresponds to the elements in the list.

Input (stdin)

4
23
56
39
11

Output (stdout)

39

  

Input (stdin)

5
41
25
36
74
85
Output (stdout)

74

Program:

list=[]

n=int(input())

for i in range(1,n+1):

  list.append(int(input()))

z=len(list)

list.sort()

for i in range(z-2,-1,-1):

  if list[i]!=list[z-1]:

    print(list[i])

    break

Q-11: Sort the list of Tuples

The program takes a list of tuples and sorts the list of tuples in increasing order by the last element in each tuple. Problem Solution 1. Take a list of tuples from the user. 2. Define a function which returns the last element of each tuple in the list of tuples. 3. Define another function with the previous function as the key and sort the list. 4. Print the sorted list. 5. Exit.

Input (stdin)

[(2,5),(1,2),(4,4),(2,3)]
Output (stdout)

Sorted:
[(1, 2), (2, 3), (4, 4), (2, 5)]

Program:

def last(n): return n[-1]

def sort_list_last(tuples):

  return sorted(tuples, key=last)

print("Sorted:")

print(sort_list_last([(2, 5), (1, 2), (4, 4), (2, 3)]))

Q-12: Remove the Duplicate

The program takes a lists and removes the duplicate items from the list. Problem Solution Take the number of elements in the list and store it in a variable. Accept the values into the list using a for loop and insert them into the list. Use a for loop to traverse through the elements of the list. Use an if statement to check if the element is already there in the list and if it is not there, append it to another list. Print the non-duplicate items of the list. Exit.

Input (stdin)

5
10
10
20
20
20

  

Output (stdout)

Non-duplicate items:


[10, 20]

Input (stdin)

4
2
6
9
8

Output (stdout)

Non-duplicate items:


[2, 6, 9, 8]

Input (stdin)

3
4
4
5

Output (stdout)

Non-duplicate items:


[4, 5]

 

Program:

list=[]

list2=[]

n=int(input())

for i in range(1,n+1):

  list.append(int(input()))

for i in list:

  if i not in list2:

    list2.append(i)

print("Non-duplicate items:")

print(list2)
